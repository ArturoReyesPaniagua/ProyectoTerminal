title IU-FormularioDatos (Formulario de Datos Iniciales o Actualización)

actor Usuario
participant index.js
participant App.js
participant ViewRenderer.jsx
participant FormularioDatos.jsx
participant react
participant Firebase Auth
participant Firestore

== Renderizado de la vista ==

App.js -> ViewRenderer.jsx: <ViewRenderer currentView={"formularioDatos"} ... />
ViewRenderer.jsx -> FormularioDatos.jsx: render()

FormularioDatos.jsx -> react: useEffect()
react -> Firestore: getDoc("usuarios/{uid}") -->> FormularioDatos.jsx
alt Si existe userDoc
    FormularioDatos.jsx -> react: setFormData(data)
else
    FormularioDatos.jsx -> react: setFormData(defaultValues)
end

== Interacción del usuario ==

Usuario -> FormularioDatos.jsx: Ingresa edad (onChange)
FormularioDatos.jsx -> react: updateField("edad", valor)

Usuario -> FormularioDatos.jsx: Ingresa peso (onChange)
FormularioDatos.jsx -> react: updateField("peso", valor)

Usuario -> FormularioDatos.jsx: Ingresa cintura, cuello, etc. (onChange)
FormularioDatos.jsx -> react: updateField(campo, valor)

Usuario -> FormularioDatos.jsx: Clic en "Establecer datos" (onClick)
FormularioDatos.jsx -> react: handleSubmit()

FormularioDatos.jsx<--react:return
== Validación del formulario ==

FormularioDatos.jsx -> react: validateForm()
FormularioDatos.jsx<--react:return
alt Campos requeridos incompletos
    FormularioDatos.jsx -> react: setError("Faltan campos")
FormularioDatos.jsx<--react:return
    FormularioDatos.jsx --> Usuario: Muestra error 
    
else if Valores inválidos
    FormularioDatos.jsx -> react: setError("Valor fuera de rango")
FormularioDatos.jsx<-react:info
    FormularioDatos.jsx<--react:return
    FormularioDatos.jsx --> Usuario: Muestra error 
    
    
else
    FormularioDatos.jsx -> react: setError(null)
    FormularioDatos.jsx<--react:return
end

== Guardado de datos ==

FormularioDatos.jsx -> Firebase Auth: auth.currentUser
alt Usuario autenticado
    FormularioDatos.jsx ->> Firestore: setDoc("usuarios/{uid}", data, { merge: true })
    FormularioDatos.jsx<--react:return
    alt Primera vez
        FormularioDatos.jsx --> Usuario: ✅ Datos establecidos con éxito
    else Actualización
        FormularioDatos.jsx ->> Firestore: addDoc("usuarios/{uid}/historial", datosActualizados)
        FormularioDatos.jsx --> Usuario:  Datos actualizados con éxito
    end

    FormularioDatos.jsx -> react: setCurrentView("menuPrincipal")
    FormularioDatos.jsx<--react:return
else
    FormularioDatos.jsx -> react: setError("Usuario no autenticado")
    FormularioDatos.jsx<--react:return
    FormularioDatos.jsx --> Usuario: Error al guardar
end

== Cancelar==

Usuario -> FormularioDatos.jsx: Clic en "Cancelar"
FormularioDatos.jsx -> react: setCurrentView("menuPrincipal")
