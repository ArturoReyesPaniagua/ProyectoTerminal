title IU 8-RegistroRutina

actor Usuario
participant index.js
participant App.js
participant ViewRenderer.jsx
participant RegistroRutina.jsx
participant CalculoDinamicoMejorado.jsx
participant ResumenEntrenamiento.jsx
participant react
participant Firebase Auth
participant Firestore



App.js -> ViewRenderer.jsx: <ViewRenderer currentView={"registrarRutina"} ... />
ViewRenderer.jsx -> RegistroRutina.jsx: render()

RegistroRutina.jsx->react:useState()\n
RegistroRutina.jsx<--react:CurrentStepSet, CurrentStep
RegistroRutina.jsx->react:useState()\n
RegistroRutina.jsx<--react: rutinas, setRutinas
RegistroRutina.jsx->react:useState()\n
RegistroRutina.jsx<--react:RutinaSeleccionada, setRutinaSeleccionada
RegistroRutina.jsx->react:useState()\n
RegistroRutina.jsx<--react:EjerciciosRealizados, setEjerciciosRealizados
RegistroRutina.jsx->react:useState()\n
RegistroRutina.jsx<--react:CurrentStepSet, CurrentStep
RegistroRutina.jsx -> react: useEffect()
RegistroRutina.jsx<--react:obtenerRutinas
RegistroRutina.jsx -> Firebase Auth: auth.currentUser
RegistroRutina.jsx<-Firebase Auth:current user
RegistroRutina.jsx<--Firebase Auth:return
alt Usuario autenticado
    RegistroRutina.jsx ->> Firestore: getDocs("usuarios/{uid}/rutinas")
    Firestore -->> RegistroRutina.jsx: rutinasSnapshot
    RegistroRutina.jsx -> react: setRutinas(rutinasValidas)
RegistroRutina.jsx<--react:return
else
    RegistroRutina.jsx -> react: setError("Usuario no autenticado")
    RegistroRutina.jsx<--react:return
end

== Paso 1: Selección de Rutina ==

Usuario -> RegistroRutina.jsx: click sobre rutina
RegistroRutina.jsx -> react: handleRutinaSeleccionada(id)
RegistroRutina.jsx<--react:return
RegistroRutina.jsx -> Firebase Auth: auth.currentUser
RegistroRutina.jsx<--Firebase Auth:return
alt Usuario autenticado
    loop Validación de ejercicios
        RegistroRutina.jsx ->> Firestore: getDocs("usuarios/{uid}/ejercicios")
        Firestore -->> RegistroRutina.jsx: ejerciciosSnapshot
        alt Ejercicio encontrado
            RegistroRutina.jsx -> react: ejerciciosValidos.push(id)

RegistroRutina.jsx<--react:return
        end
    end

    alt ejerciciosValidos > 0
        RegistroRutina.jsx -> react: setRutinaSeleccionada(runtinax)
RegistroRutina.jsx<-react:return
        RegistroRutina.jsx -> react: setCurrentStep(2)
RegistroRutina.jsx<-react:return
    else No hay ejericicos en la rutina
        RegistroRutina.jsx --> Usuario: alerta: "Ejercicios no disponibles"
        == ir a paso 1==
    end
else Usuario no autentificado
    RegistroRutina.jsx --> Usuario: alerta "No autenticado"
end

== Paso 2: Ejecución de rutina ==

RegistroRutina.jsx -> CalculoDinamicoMejorado.jsx: cargar(rutinaSeleccionada)

RegistroRutina.jsx<--CalculoDinamicoMejorado.jsx:return
Usuario<-RegistroRutina.jsx:Muestra formulario con set, peso
Usuario -> CalculoDinamicoMejorado.jsx: llena datos, marca ejercicios
CalculoDinamicoMejorado.jsx -> react: setEjerciciosRealizados([...])
CalculoDinamicoMejorado.jsx<-react:return
  alt hay mas ejercicios 
   == paso 2 ==
  else no hay mas ejercicios 
    Usuario -> CalculoDinamicoMejorado.jsx: click "Finalizar rutina"
    CalculoDinamicoMejorado.jsx -> react: setCurrentStep(3)
CalculoDinamicoMejorado.jsx<--react:return
  end
== Paso 3: Mostrar Resumen ==

RegistroRutina.jsx -> ResumenEntrenamiento.jsx: render(props)
RegistroRutina.jsx<-ResumenEntrenamiento.jsx:return
RegistroRutina.jsx -> Usuario: muestra estadísticas

Usuario -> ResumenEntrenamiento.jsx: click "Finalizar"
ResumenEntrenamiento.jsx -> RegistroRutina.jsx: onFinalizar()


 RegistroRutina.jsx -> react: setCurrentStep
 RegistroRutina.jsx <-- react: return
 RegistroRutina.jsx -> react: setRutinaSeleccionada(null)
 RegistroRutina.jsx <-- react: return
 RegistroRutina.jsx -> react: setEjerciciosRealizados([])
 RegistroRutina.jsx <-- react: return
 RegistroRutina.jsx -> react: setCurrentView("menuPrincipal")
 RegistroRutina.jsx <-- react: return

== ir index inica ==

alt No hay rutinas
    RegistroRutina.jsx --> Usuario: mostrar mensaje: "No hay rutinas disponibles"
    Usuario -> click "Crear rutina"
    RegistroRutina.jsx -> react: setCurrentView("menuRutina")
else if error conexión
    RegistroRutina.jsx --> Usuario: "Error al cargar las rutinas"
end

== Otras acciones ==

Usuario -> RegistroRutina.jsx: click "Regresar"
RegistroRutina.jsx -> react: setCurrentView("menuPrincipal")

